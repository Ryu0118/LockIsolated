import SwiftSyntax
import SwiftDiagnostics

public enum LockIsolatedDiagnostic {
    case requiresClass
    case samePropertyName
}

extension LockIsolatedDiagnostic: DiagnosticMessage {
    func diagnose(at node: some SyntaxProtocol) -> Diagnostic {
        Diagnostic(node: Syntax(node), message: self)
    }

    public var message: String {
        switch self {
        case .requiresClass:
            return "'LockIsolated' macro can only be applied to class"

        case .samePropertyName:
            return "The property name 'lock' has the same name as the property generated by LockIsolated"
        }
    }

    public var severity: DiagnosticSeverity { .error }

    public var diagnosticID: MessageID {
        MessageID(domain: "Swift", id: "LockIsolated.\(self)")
    }
}
